services:
  web:
    build: .
    command: gunicorn conf.wsgi:application --bind 0.0.0.0:8000 --timeout 60 --workers 2 --threads 2 --reload
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - .:/home/app/web
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      - db
    restart: on-failure
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    restart: on-failure
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf/:ro
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 80:80
    depends_on:
      - web
    restart: on-failure
  redis:
    image: redis:alpine
    restart: on-failure
  celery:
    build: .
    command: celery -A conf worker -l info
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    env_file:
      - .env
    depends_on:
      - redis
    restart: on-failure
volumes:
  postgres_data:
  static_volume:
  media_volume: